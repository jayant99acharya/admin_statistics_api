services:
  # MongoDB service
  mongodb:
    image: mongo:7.0
    container_name: admin-stats-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: admin_statistics
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - admin-stats-network

  # Redis service
  redis:
    image: redis:7.2-alpine
    container_name: admin-stats-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - admin-stats-network

  # Application service
  app:
    build: .
    container_name: admin-stats-api
    restart: unless-stopped
    ports:
      - "8090:8090"
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/admin_statistics?authSource=admin
      - REDIS_ADDR=redis:6379
      - DB_NAME=admin_statistics
      - AUTH_TOKEN=admin-secret-token-2024
      - PORT=8090
      - GIN_MODE=release
    depends_on:
      - mongodb
      - redis
    networks:
      - admin-stats-network

  # MongoDB Express (optional - for database management)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: admin-stats-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - admin-stats-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  admin-stats-network:
    driver: bridge